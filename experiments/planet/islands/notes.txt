How ya gonna get all the hexagons from all the triangles

0. So you have all the triangles
1. Then you get all the centers
2. (This is an array of 20 * n * n 3d vectors)
3. You need to group these vectors into groups of 6 pairs, then find the center of those pairs
- every triangle is part of 3 hexagons
- each hexagon uses 1/3 of 5 or 6 triangles
- duh, number of vertices = number of pexagons
-- triangle-vertices = 3*triangles
-- (3*triangles) - (5*12) = (6*hexagons)
-- (3*20) - 60 = 0 = (6*0)
-- (3*80) - 60 = 180 = (6*30)
-- (3*180) - 60 = 480 = (6*80)
-- hexagons = ((3*20*n*n) - 60) / 6 = ((10nn) - 10)

-- number of hexagons = (10 * n * n) - 10

Two ways to do it:
- the tedious precise
- the inefficient way using proximity 

For each face:
- find center
- find 6 neighbours
- find centers of 6 neighbours
- find 6 midpoints between center and neighbour centers
